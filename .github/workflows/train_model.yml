name: 🚀 Train and Upload to GDrive

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train-and-upload:
    runs-on: ubuntu-latest

    env:
      GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas scikit-learn matplotlib seaborn mlflow
          pip install google-api-python-client google-auth google-auth-oauthlib google-auth-httplib2

      - name: 🧠 Train ML Model with MLflow
        working-directory: MLProject
        run: |
          python modelling.py

      - name: ☁️ Upload MLflow Artifacts to Google Drive
        working-directory: MLProject
        run: |
          python upload_to_gdrive.py

      # ✅ Get Latest Run ID from MLflow
      - name: Get Latest Run ID
        id: get_run
        working-directory: MLProject
        run: |
          RUN_ID=$(python -c 'import mlflow; from mlflow.tracking import MlflowClient; client = MlflowClient(); exp = client.get_experiment_by_name("Cardiovascular_Classifier"); runs = client.search_runs([exp.experiment_id], order_by=["start_time DESC"], max_results=1); print(runs[0].info.run_id)')
          echo "run_id=$RUN_ID" >> "$GITHUB_OUTPUT"

      # ✅ Build Docker Image
      - name: Build Docker Model
        run: |
            mlflow models build-docker --model-uri "runs://${{ steps.get_run.outputs.run_id }}/model" --name "cc"


      # ✅ Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # ✅ Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest

      # ✅ Push Docker Image
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest
